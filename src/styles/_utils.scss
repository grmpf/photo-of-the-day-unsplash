@use 'mixins/clearfix';
@use 'mixins/svg';



.clearfix {
	@include clearfix.child;
}
.clearFixer::after {
	@include clearfix.group;
}



// TODO: more researching/testing the different ways of loading SVGs:
// - auto-optimized svg in css via DataUri (e.g. with ?data)
// - auto-optimized svg via import "FooSvg from '../FooSvg.svg'"

.bg-test {
	border: 2px solid blue;
	/* NOT WORKING SO FAR
	background-image0: url("../../public/assets/svg/bgWall.svg");
	background-imageD: url("../../public/assets/svg/bgWall.svg?data");
	background-imageP: url("../../public/assets/svg/bgWall.svg?path");

	//background-image0: url("/assets/svg/bgWall.svg");
	//background-imageD: url("/assets/svg/bgWall.svg?data");
	//background-imageP: url("/assets/svg/bgWall.svg?path");
	*/

	// Works but isn't dynamic
	$bgWall: "<svg width='650' height='500' viewBox='0 0 650 500' xmlns='http://www.w3.org/2000/svg'><filter id='roughpaper' x='0%' y='0%' width='100%' height='100%'><feTurbulence type='fractalNoise' baseFrequency='0.04' result='noise' numOctaves='5' /><feDiffuseLighting in='noise' lighting-color='white' surfaceScale='2.5'><feDistantLight azimuth='45' elevation='70' /></feDiffuseLighting></filter><rect x='0' y='0' width='100%' height='100%' filter='url(#roughpaper)' fill='none'></rect></svg>";
	background-image: svg.svg-url($bgWall);
}
